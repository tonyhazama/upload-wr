{"version":3,"sources":["component/upload-component-2.js","App.js","reportWebVitals.js","index.js"],"names":["getBase64","img","callback","reader","FileReader","addEventListener","result","readAsBinaryString","UploadComponent","value","title","onChange","accept","onRemove","maxSize","disabled","url","uploadFn","fluidBtn","showDesc","classBtn","splitUpload","onInputData","showPreview","previewStyle","useState","fileList","setFileList","isLoading","setIsLoading","useEffect","handleChange","info","a","newFileList","slice","map","file","size","name","response","status","length","originFileObj","wb","XLSX","type","wsname","SheetNames","ws","Sheets","data","sheet_to_json","header","uploadProps","beforeUpload","event","multiple","iconRender","style","marginBottom","width","padding","height","LoadingOutlined","UploadOutlined","CheckCircleFilled","color","defaultProps","onError","isAuth","Promise","resolve","reject","body","FormData","append","axios","post","then","res","catch","err","getJsDateFromExcel","require","column","dataIndex","key","render","t","r","i","task","tasks","toDate","date","Date","toISOString","split","App","setData","wrData","setWrData","log","setLog","requestParam","setRequestParam","token","setToken","_","getData","start","end","config","headers","Authentication","get","newWrData","newData","e","wrTask","find","wd","taskId","workingReportId","updateWr","wrId","location","prevLog","put","uploadTask","taskTitle","duration","index","deleteTask","delete","processTasks","confirm","forEach","regularTasks","wrDate","getTime","display","flexWrap","rawData","console","filter","j","parseFloat","margin","bordered","columns","dataSource","pagination","onClick","marginTop","borderRadius","background","fontWeight","RenderTasks","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.576515c0.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Upload, Button, message, Table } from 'antd';\r\nimport { UploadOutlined, LoadingOutlined, CheckCircleFilled } from '@ant-design/icons';\r\n// import { dialog } from '../functions/alert';\r\nimport * as XLSX from 'xlsx';\r\nimport axios from 'axios';\r\nimport Text from 'antd/lib/typography/Text';\r\n\r\n\r\nexport function saveFile (url, file, isAuth) {\r\n  return new Promise((resolve, reject) => {\r\n    let body = new FormData();\r\n    body.append('file', file);\r\n    axios.post(url, body).then(res => {\r\n      resolve(res);\r\n    }).catch(err => reject(err));\r\n  });\r\n};\r\n\r\nUploadComponent.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func,\r\n  accept: PropTypes.string,\r\n  maxSize: PropTypes.number,\r\n  value: PropTypes.any,\r\n  url: PropTypes.string.isRequired,\r\n  uploadFn: PropTypes.func,\r\n  disabled: PropTypes.bool,\r\n  fluidBtn: PropTypes.bool,\r\n  classBtn: PropTypes.string,\r\n  splitUpload: PropTypes.bool,\r\n  showDesc: PropTypes.bool,\r\n  showPreview: PropTypes.bool,\r\n  previewStyle: PropTypes.object\r\n};\r\n\r\n\r\nUploadComponent.defaultProps  = {\r\n  title: 'Upload File',\r\n  onChange: () => {},\r\n  onError: () => {},\r\n  onRemove: () => {},\r\n  maxSize: 1,\r\n  url: '',\r\n  uploadFn: saveFile,\r\n  splitUpload: false,\r\n  showDesc: false,\r\n  showPreview: false,\r\n  previewStyle: {}\r\n}\r\n\r\nfunction getBase64(img, callback) {\r\n  const reader = new FileReader();\r\n  reader.addEventListener('load', () => callback(reader.result));\r\n  reader.readAsBinaryString(img);\r\n}\r\n\r\nfunction UploadComponent({ \r\n  value,\r\n  title,\r\n  onChange,\r\n  onRemove,\r\n  accept,\r\n  maxSize,\r\n  url,\r\n  uploadFn,\r\n  disabled,\r\n  fluidBtn,\r\n  classBtn,\r\n  splitUpload,\r\n  showDesc,\r\n  showPreview,\r\n  previewStyle,\r\n  onInputData,\r\n  ...props\r\n}) {\r\n  const [fileList, setFileList] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (!!value) {\r\n      setFileList(value.fileList || []);\r\n    }\r\n  }, [value]);\r\n\r\n  const handleChange = async (info) => {\r\n    // console.log('uploadProps ', props)\r\n    setIsLoading(true);\r\n    let newFileList = [...info.fileList];\r\n    newFileList = newFileList.slice(-1);\r\n    newFileList = newFileList.map((file) => {\r\n      if(file.size / 1024 / 1024 > (maxSize)){\r\n        file.name = \"File terlalu besar\";\r\n        file.response = \"File tidak dapat diunggah\";\r\n        file.status = \"error\";\r\n        // dialog({icon:'error', title: 'File terlalu besar', text: `Ukuran file harus < ${maxSize} MB`})\r\n        onChange(null);\r\n      } \r\n      return file;  \r\n    });\r\n    \r\n    if (newFileList.length > 0 && newFileList[0].status !== \"error\") {\r\n      getBase64(newFileList[0].originFileObj, url => {\r\n        const wb = XLSX.read(url, {type:'binary'});\r\n        const wsname = wb.SheetNames[0];\r\n        const ws = wb.Sheets[wsname];\r\n        // const data = XLSX.utils.sheet_to_csv(ws, {header:1});\r\n        const data = XLSX.utils.sheet_to_json(ws, {header:1});\r\n        onInputData(data);\r\n      });\r\n      // try {\r\n      //   const uploadRes = await uploadFn(url, newFileList[0].originFileObj, props.isAuth);\r\n      //   message.success({content: 'File berhasil diunggah', top: \"100px\"})\r\n      //   delete newFileList[0].originFileObj;\r\n      //   onChange({fileName: uploadRes.data.fileName, fileList: newFileList});\r\n      // } catch (err) {\r\n      //   // const {data} = err.response;\r\n      //   newFileList[0].status = \"error\";\r\n      //   newFileList[0].response = err.response ? err.response.data.message : err.message;\r\n      //   message.error({content: 'File gagal diunggah', top: \"100px\"})\r\n      //   onChange(null)\r\n      // }\r\n    }\r\n    setFileList(newFileList);\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const handleRemove = (info) => {\r\n    onChange('');\r\n    setFileList([]);\r\n  };\r\n\r\n  const uploadProps = {\r\n    beforeUpload: file => {\r\n      // console.log(file)\r\n      return false;\r\n    },\r\n    onChange: event => { handleChange(event); },\r\n    onRemove: event => { handleRemove(event) },\r\n    fileList: fileList,\r\n    multiple: false\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Upload {...uploadProps} iconRender={''} accept={accept} >\r\n        <Button style={{marginBottom: '1em'}} disabled={disabled || isLoading} style={{width: fluidBtn ? \"100%\" : \"auto\", padding: \"5px 20px\", height: \"auto\"}}>\r\n          {isLoading ? <LoadingOutlined /> : <UploadOutlined />} {title}\r\n          {!!value && <CheckCircleFilled style={{ color: '#27ae60' }} />}\r\n        </Button>\r\n      </Upload>\r\n      {!value && showDesc && <Text style={{color: 'rgb(172, 172, 172)'}}> Ukuran file max {maxSize} MB</Text>}\r\n      {/* {value && imgUrl && showPreview && (\r\n        <div style={{padding: '.5em', border: '1px solid #dddddd', textAlign: 'center', borderRadius: '4px', height: '200px',  width: '100%', marginTop: '.5em', ...previewStyle}}>\r\n          <div style={{width: '100%', height: '100%', textAlign: 'center', overflow: 'hidden'}}>\r\n            <img src={imgUrl} alt=\"Preview\" style={{height: '100%'}} />\r\n          </div>\r\n        </div>\r\n      )} */}\r\n      {/* {data && (\r\n        <div style={{width: '100%', marginTop: '2em'}}>\r\n          <Table bordered={true} columns={column} dataSource={data} pagination={false}></Table>\r\n        </div>\r\n      )} */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UploadComponent;\r\n\r\n\r\n/*\r\n  CONTOH PENGGUNAAN\r\n\r\n  <Form>\r\n    <Form.Item\r\n      name=\"suratPemandian\"\r\n      rules={[{required: true, message: 'Surat Pemandian harus diinput' }]}\r\n    >\r\n      <UploadComponent \r\n        url={CONFIG.BASE_URL_NOAUTH+'/api/upload/foto'}\r\n        title=\"Upload Surat Pemandian\"\r\n        onChange={_ => {}}\r\n      />\r\n    </Form.Item>\r\n  </Form>\r\n*/\r\n\r\n\r\n\r\n// var name = f.name;\r\n// const reader = new FileReader();\r\n// reader.onload = (evt) => { // evt = on_file_select event\r\n//     /* Parse data */\r\n//     const bstr = evt.target.result;\r\n//     const wb = XLSX.read(bstr, {type:'binary'});\r\n//     /* Get first worksheet */\r\n//     const wsname = wb.SheetNames[0];\r\n//     const ws = wb.Sheets[wsname];\r\n//     /* Convert array of arrays */\r\n//     const data = XLSX.utils.sheet_to_csv(ws, {header:1});\r\n//     /* Update state */\r\n//     console.log(\"Data>>>\"+data);\r\n// };\r\n// reader.readAsBinaryString(f);","/* eslint-disable no-restricted-globals */\nimport React, {useEffect, useState} from 'react';\nimport 'antd/dist/antd.css';\nimport { Button, Table } from 'antd';\nimport UploadComponent from './component/upload-component-2';\nimport axios from 'axios';\nconst { getJsDateFromExcel } = require(\"excel-date-to-js\");\n\nconst column = [\n  {\n    title: 'Date',\n    dataIndex: 'date',\n    key: 'date',\n  },\n  {\n    title: 'Tasks',\n    dataIndex: 'tasks',\n    key: 'tasks',\n    render: (t, r, i) => (\n      <RenderTasks task={r.tasks} />\n    ),\n  },\n  {\n    title: 'Location',\n    dataIndex: 'location',\n    key: 'location',\n  },\n  {\n    title: 'Task ID',\n    dataIndex: 'taskId',\n    key: 'taskId',\n    \n  },\n];\n\nconst toDate = (date) => {\n  return new Date(date).toISOString().split('T')[0];\n};\n\nexport default function App() {\n  const [data, setData] = useState(null);\n  const [wrData, setWrData] = useState([]);\n  const [log, setLog] = useState('');\n  const [requestParam, setRequestParam] = useState();\n  const [token, setToken] = useState('');\n  \n  useEffect(_ => {\n    setToken('eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0b255aGF6YW1hNDcyMUBnbWFpbC5jb20iLCJhdXRob3JpdGllcyI6WyIyIl0sImlhdCI6MTY0MjA5MjY1MSwiZXhwIjoxNjQyMTc5MDUxfQ.jani8HSQkqmt_i4GtVF-EurE5t-iSDNyIA_7KI9Azbcs8qG1eiWxbzNkzjMkRlXJ14YidJmB0H08CHcwaEU36A');\n  }, [])\n\n  useEffect(_ => {\n    if (requestParam) {\n      getData(requestParam[0], requestParam[1]);\n    }\n  }, [requestParam]);\n\n  const handleChange = (rawData) => {\n    console.log({rawData});\n    let newData = rawData.filter(e => (e.length > 1 && !!e[1])).map(e => {\n      const newDate = toDate(getJsDateFromExcel(e[0]));\n      // const wrTask = wrData.find(e => toDate(e.date) === newDate) || {};\n      return {\n        date: newDate,\n        // taskId: wrTask.workingReportId,\n        tasks: e[1].split(/\\r?\\n/).filter(e => !!e).map(j => {\n          let task = j.split(' - ');\n          task[1] = parseFloat(task[1]);\n          return task;\n        }),\n        location: e[2]\n      };\n    });\n    setData(newData);\n    setRequestParam([newData[0].date,newData[newData.length - 1].date]);\n  };\n\n  const getData = (start, end) => {\n    let config = {\n      headers: {\n        Authentication: token,\n      }\n    };\n    axios.get(`https://wr.tujuhsembilan.com/wr-be/workingReport?employeeId=26&startDate=${start}&endDate=${end}`, config).then(res => {\n      const newWrData = res.data.data || [];\n      let newData = data.map(e => {\n        const wrTask = newWrData.find(wd => toDate(wd.date) === e.date) || {};\n        return {\n          ...e,\n          taskId: wrTask.workingReportId\n        };\n      });\n      setWrData(newWrData);\n      setData(newData);\n    });\n  };\n\n  const updateWr = async (wrId, date, location) => {\n    return new Promise(async (resolve, reject) => {\n\n      let config = {\n        headers: {\n          Authentication: token,\n        }\n      };\n      \n      const data = {\n        \"workingReportId\": wrId,\n        \"date\": date,\n        \"startTime\": \"08:00:00\",\n        \"endTime\": \"17:00:00\",\n        \"location\": location,\n        \"categoryCodeId\": 1,\n        \"holiday\": false\n      };\n      \n      setLog(prevLog => prevLog + `^ Updating WR ${wrId} ...\\n`);\n      try {\n        await axios.put(`https://wr.tujuhsembilan.com/wr-be/workingReport/update?modelID=workingReportId:${wrId}`, data, config);\n        setLog(prevLog => prevLog + `v WR ${wrId} updated.\\n`);\n      } catch (err) {\n        setLog(prevLog => prevLog + `! Failed to update WR ${wrId}.\\n`);\n      }\n      resolve();\n    });\n  };\n\n  const uploadTask = async (taskId, taskTitle, duration, index) => {\n    return new Promise(async (resolve, reject) => {\n\n      let config = {\n        headers: {\n          Authentication: token,\n        }\n      };\n      \n      const data ={\n        \"workingReportId\": taskId,\n        \"jobGroupId\": 372,\n        \"taskItem\": taskTitle,\n        \"duration\": duration,\n        \"isOvertime\": false\n      };\n      setLog(prevLog => prevLog + `? Creating task ${taskId}#${index} ...\\n`);\n      try {\n        const createTaskRes = await axios.post(`https://wr.tujuhsembilan.com/wr-be/task/create`, data, config);\n        setLog(prevLog => prevLog + `+ Task ${taskId}#${index} Created.\\n`);\n      } catch (err) {\n        setLog(prevLog => prevLog + `! Failed to create task ${taskId}#${index}.\\n`);\n      }\n      resolve();\n    });\n  };\n\n  const deleteTask = async (taskId, wrId, index) => {\n    return new Promise(async (resolve, reject) => {\n      let config = {\n        headers: {\n          Authentication: token,\n        }\n      };\n\n      setLog(prevLog => prevLog + `/ Deleting task ${taskId} (${wrId}#${index}) ...\\n`);\n      try {\n        await axios.delete(`https://wr.tujuhsembilan.com/wr-be/task/delete?modelID=taskId:${taskId}`, config);\n        setLog(prevLog => prevLog + `- Task ${taskId} (${wrId}#${index}) Deleted.\\n`);\n      } catch (err) {\n        setLog(prevLog => prevLog + `! Failed to delete task ${taskId} (${wrId}#${index}).\\n`);\n      }\n      resolve();\n    });\n  };\n  \n  const processTasks = async () => {\n    \n\n    if (!confirm('Are you sure?')) {\n      return;\n    }\n\n    wrData.forEach(({regularTasks, workingReportId}) => {\n      regularTasks.forEach(async (task, i) => {\n        await deleteTask(task.taskId, workingReportId, i);\n      });\n    });\n\n    data.forEach(async ({tasks, taskId, location, date}) => {\n      const wrDate = (new Date(date)).getTime();\n      await updateWr(taskId, wrDate, location);\n      tasks.forEach(async (task, i) => {\n        await uploadTask(taskId, task[0], task[1], i);\n      });\n    });\n\n  }\n\n\n  return (\n    <div style={{height: '100%'}}>\n      <div style={{display: 'flex', flexWrap: 'wrap'}}>\n        <UploadComponent onInputData={handleChange} />\n      </div>\n      <div style={{width: '100%', margin: '2em 0'}}>\n        <Table bordered={true} columns={column} dataSource={data} pagination={false}></Table>\n      </div>\n      <Button onClick={processTasks} disabled={!wrData || wrData.length <= 0}>\n        Upload Data\n      </Button>\n      <div style={{marginTop: '1em', padding: '.5em 1em', borderRadius: '4px', background: '#eeeeee'}}>\n        <h4 style={{fontWeight: 'bold'}}>Logs</h4>\n        <pre>{log}</pre>\n      </div>\n    </div>\n  )\n}\n\n\nconst RenderTasks = ({task}) => {\n  return (\n    <>\n      {task.map(e => (\n        <tr>\n          <td>{e[0]} / {e[1]} Jam</td>\n        </tr>\n      ))}\n    </>\n  )\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    {/* <Bread /> */}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}